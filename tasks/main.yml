# tasks file for cacti-server
---
# TODO: Check for first install

- name: check php
  command: >
    which php

- name: check mysqld
  command: >
    which mysqld

- name: install dependencies
  apt:
    name: "{{ cacti_server_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - cacti-server
    - cacti-server-dependencies

- name: create (checkout) directory
  file:
    path: "{{ cacti_server_checkout_path }}"
    state: directory
    owner: "{{ cacti_server_default_owner }}"
    group: "{{ cacti_server_default_group }}"
    mode: "{{ cacti_server_default_directory_mode }}"
  tags:
    - configuration
    - cacti-server
    - cacti-server-checkout

- name: checkout repository
  git:
    repo: "{{ cacti_server_checkout_repo }}"
    dest: "{{ cacti_server_checkout_path }}"
    version: "release/{{ cacti_server_version }}"
    force: true
  register: _git_checkout
  tags:
    - configuration
    - cacti-server
    - cacti-server-checkout

####

- name: create (writable) directories
  file:
    path: "{{ cacti_server_checkout_path }}/{{ item }}/"
    state: directory
    owner: "{{ cacti_server_user }}"
    group: "{{ cacti_server_group }}"
    recurse: true
  with_items:
    - cache
    - rra
    - log
  tags:
    - configuration
    - cacti-server
    - cacti-server-checkout

- name: update conf file
  template:
    src: "{{ cacti_server_config_file.lstrip('/') }}.j2"
    dest: "{{ cacti_server_config_file }}"
    owner: "{{ cacti_server_default_owner }}"
    group: "{{ cacti_server_group }}"
    mode: 0640
    validate: 'php -l %s'
  tags:
    - configuration
    - cacti-server
    - cacti-server-update-conf-file

# TODO: Revert after install

- name: make directories writable (for install)
  file:
    path: "{{ cacti_server_checkout_path }}/{{ item }}/"
    state: directory
    owner: "{{ cacti_server_user }}"
    group: "{{ cacti_server_group }}"
    recurse: true
  with_items:
    - resource/snmp_queries
    - resource/script_server
    - resource/script_queries
    - scripts
  tags:
    - configuration
    - cacti-server
    - cacti-server-checkout

- name: check database
  command: >
    mysql -Bse "SHOW DATABASES LIKE 'cacti';"
  register: _database
  changed_when: false

- name: import cacti.sql
  mysql_db:
    state: import
    name: "{{ cacti_server_config_database_default }}"
    target: "{{ cacti_server_checkout_path }}/cacti.sql"
  when: _database.stdout_lines | length

# TODO: poller
