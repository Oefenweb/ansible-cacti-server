# tasks file for cacti-server
---
- name: configure | create (permanent) rw directories
  file:
    path: "{{ cacti_server_checkout_path }}/{{ item }}/"
    state: directory
    owner: "{{ cacti_server_user }}"
    group: "{{ cacti_server_group }}"
    recurse: true
  with_items:
    - cache
    - rra
    - log
  tags:
    - cacti-server-pre-create-permanent-rw-directories

- name: configure | update config file
  template:
    src: "{{ cacti_server_config_file.lstrip('/') }}.j2"
    dest: "{{ cacti_server_config_file }}"
    owner: "{{ cacti_server_default_owner }}"
    group: "{{ cacti_server_group }}"
    mode: 0640
    validate: 'php -l %s'
  tags:
    - cacti-server-pre-update-config-file

- name: configure | create (temporary) rw directories
  file:
    path: "{{ cacti_server_checkout_path }}/{{ item }}/"
    state: directory
    owner: "{{ cacti_server_user }}"
    group: "{{ cacti_server_group }}"
    recurse: true
  with_items: "{{ cacti_server_hardened_directories }}"
  when: _git_checkout is changed
  tags:
    - cacti-server-pre-create-temporary-rw-directories

- name: configure | import cacti.sql
  mysql_db:
    state: import
    name: "{{ cacti_server_config_database_default }}"
    target: "{{ cacti_server_checkout_path }}/cacti.sql"
  when:
    # database is found
    - _database.stdout_lines | default([]) | length
    # table is not found
    - (_version.stdout_lines | default([]) | length) == 0
  tags:
    - cacti-server-pre-import-cacti-sql

- name: configure | install
  file:
    src: "{{ cacti_server_install_path.src }}"
    dest: "{{ cacti_server_install_path.dest }}"
    state: link
    force: true
  tags:
    - cacti-server-pre-install
